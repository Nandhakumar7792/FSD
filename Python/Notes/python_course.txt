#list comprehension

list1 = [x+1 for x in range(9)]
list2 = [x**2 for x in range(10) if x%2 != 0]

*result* = [*transform* *iteration* *filter* ]

def fun(x):
    return x+30
increased_marks1 = [fun(x) for x in list]

#using tuples
vec = [2, 4, 6]
x1 = [(x, x**2) for x in vec]

print (x1)

#file handling
Write Operation :
file = open("testfile.txt","w")   

file.write("Welcome Guvi........") 

file.close() 

Read Operation :
file = open("testfile.txt", "r")
file.seek(0)
print file.read()

#class
class MyClass:
    "This is my second class"
    a = 10
    def func(self):
        print('Hello')
ob = MyClass()
print(MyClass.func)
print(ob.func)
ob.func()

#Tasks
#class vs module?
#__init__ vs __new__
#magic methods? list few?


#lambda
x = lambda a,b : a**b

print(x(2,3))

def odd_or_even(x):
  if x%2 ==0:
    return "Even"
  else:
    return "Odd"

list1 = [2, 3, 5, 18]
list2 = list(map(odd_or_even, list1))
print(list2)

list3 = list(map(lambda x : x%2, list1))
print(list3)


#check again
print (sorted([1, 2, 3, 4, 5, 6, 7, 8, 9], key=lambda x: abs(5-x)))

# Read excel data
import xlrd
file_location = "file.xlsx"
workbook = xlrd.open_workbook(file_location)
sheet = workbook.sheet_by_index(0)

sheet.cell_value(0, 0)
sheet.nrows()
sheet.ncols()

for col in range(sheet.ncols()):
  print(sheet.cell_value(0, col))

data = [[sheet.cell_value(r, c) for c in range(sheet.ncols())] for r in range(sheet.nrows)]

print(data)